[{"/home/sebamawa/PROYECTOS/REACT/react-learning/src/index.js":"1","/home/sebamawa/PROYECTOS/REACT/react-learning/src/reportWebVitals.js":"2","/home/sebamawa/PROYECTOS/REACT/react-learning/src/App.js":"3","/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/customers/CustomersListComponent.js":"4","/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/customers/AddCustomerFormComponent.js":"5","/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/StarRatingComponent.js":"6","/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/custom-hooks/form-hooks.js":"7","/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/colors/ColorListComponent.js":"8","/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/colors/AddColorFormComponent.js":"9","/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/colors/ColorProvider.js":"10","/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/customers/CustomersProviderHook.js":"11","/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/customers/FakeComponent.js":"12"},{"size":1478,"mtime":1609642332901,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1609550291297,"results":"15","hashOfConfig":"14"},{"size":806,"mtime":1609727726148,"results":"16","hashOfConfig":"14"},{"size":3609,"mtime":1609737376082,"results":"17","hashOfConfig":"14"},{"size":1191,"mtime":1609728082059,"results":"18","hashOfConfig":"14"},{"size":1730,"mtime":1609550291297,"results":"19","hashOfConfig":"14"},{"size":750,"mtime":1609632307161,"results":"20","hashOfConfig":"14"},{"size":2422,"mtime":1609632085778,"results":"21","hashOfConfig":"14"},{"size":2885,"mtime":1609633145943,"results":"22","hashOfConfig":"14"},{"size":1572,"mtime":1609631767912,"results":"23","hashOfConfig":"14"},{"size":2879,"mtime":1609735076870,"results":"24","hashOfConfig":"14"},{"size":224,"mtime":1609651105645,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"f58yc3",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"/home/sebamawa/PROYECTOS/REACT/react-learning/src/index.js",[],["54","55"],"/home/sebamawa/PROYECTOS/REACT/react-learning/src/reportWebVitals.js",[],"/home/sebamawa/PROYECTOS/REACT/react-learning/src/App.js",["56","57","58"],"import React from \"react\";\nimport ColorListComponent from \"./components/colors/ColorListComponent\";\nimport AddColorFormComponent from \"./components/colors/AddColorFormComponent\";\nimport CustomersListComponent from \"./components/customers/CustomersListComponent\";\nimport FakeComponent from \"./components/customers/FakeComponent\";\nimport AddCustomerFormComponent from \"./components/customers/AddCustomerFormComponent\";\n\nexport default function App() {\n    return (\n        <>\n            <div>\n                {/* <FakeComponent /> */}\n                <CustomersListComponent />\n                <AddCustomerFormComponent />\n            </div> \n            <hr/>\n            <div>\n                {/* <AddColorFormComponent />\n                <ColorListComponent /> */}\n            </div>\n        </>\n    );\n}","/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/customers/CustomersListComponent.js",[],"/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/customers/AddCustomerFormComponent.js",[],"/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/StarRatingComponent.js",[],"/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/custom-hooks/form-hooks.js",[],["59","60"],"/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/colors/ColorListComponent.js",[],"/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/colors/AddColorFormComponent.js",[],"/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/colors/ColorProvider.js",[],"/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/customers/CustomersProviderHook.js",["61","62"],"/**\n * Componente con estado (custom provider) para envolver al contexto Context.Provider de customers\n */\n\nimport React, { createContext, useState, useContext, useEffect } from \"react\";\n\n// CONTEXTO para almacenar la data de customers\nconst CustomersContext = createContext();\n\nconst urlBaseCustomers = \"http://localhost:3000/customers\"; // base url for api requests\n\nexport default function CustomersProvider({ children }) {\n\n    const [customers, setCustomers] = useState();\n\n    \n    // para hacer el http request get de customers\n    useEffect(() => {\n        fetch(urlBaseCustomers)\n            .then(response => response.json())\n            .then(setCustomers)\n            .catch(console.error);\n        \n    }, [children]);\n\n    // http post\n    const addCustomer = async customer => {\n        try {\n            const response = await fetch(urlBaseCustomers, \n                {\n                    method: \"POST\",\n                    body: JSON.stringify(customer),\n                    headers: {\n                        'Content-Type': 'application/json'\n                        // 'Content-Type': 'application/x-www-form-urlencoded',\n                    }\n                }\n            );\n            const customerData = await response.json();\n            // console.log(customerData);\n            setCustomers([...customers, customerData]); // agrego el customer nuevo sin hacer un GET\n        } catch(error) {\n            console.log(error);\n        }\n    }\n\n    const deleteCustomer = async id => {\n        const url = `${urlBaseCustomers}/${id}`;\n        console.log(url);\n        try {\n            const response = await fetch(url, \n                {\n                    method: \"DELETE\",\n                    // body: JSON.stringify(),\n                     headers: {\n                         'Content-Type': 'application/json'\n                         // 'Content-Type': 'application/x-www-form-urlencoded',\n                     }\n                }\n            );\n            // const customerData = await response.json();\n            // console.log(customerData);\n            const customersMinusOne = customers.filter(customer => customer.id != id);\n            setCustomers(customersMinusOne); // agrego el customer nuevo sin hacer un GET\n        } catch(error) {\n            console.log(error);\n        }        \n\n    }\n\n    // if (!customers) return null;\n    if (!customers) return <h1>Loading</h1>;\n    return (\n        // proveedor de contexto (se agregan los colores del estado al contexto)\n        <CustomersContext.Provider value={{customers, addCustomer, deleteCustomer}}>\n            {children}\n        </CustomersContext.Provider>\n    );\n}\n\n//const ColorContext = createContext();\n// hook que encapsula el contexto con la data de los colores y estado\nexport const useCustomers = () => useContext(CustomersContext); // retorna objeto con el contexto","/home/sebamawa/PROYECTOS/REACT/react-learning/src/components/customers/FakeComponent.js",[],{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":26},{"ruleId":"67","severity":1,"message":"71","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":29},{"ruleId":"67","severity":1,"message":"72","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":21},{"ruleId":"63","replacedBy":"73"},{"ruleId":"65","replacedBy":"74"},{"ruleId":"67","severity":1,"message":"75","line":51,"column":19,"nodeType":"69","messageId":"70","endLine":51,"endColumn":27},{"ruleId":"76","severity":1,"message":"77","line":63,"column":80,"nodeType":"78","messageId":"79","endLine":63,"endColumn":82},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'ColorListComponent' is defined but never used.","Identifier","unusedVar","'AddColorFormComponent' is defined but never used.","'FakeComponent' is defined but never used.",["80"],["81"],"'response' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]